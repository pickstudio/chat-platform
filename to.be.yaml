openapi: 3.0.2
info:
  title: ChatPlatform openapi
  version: '1'
paths:
  "/":
    get:
      summary: Health Check
      description: health check
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HealthCheckResponse"

  "/users":
    post:
      tags:
        - user
      summary: Register a user
      description: 유저 정보 입력
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserRequest"
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"

  "/users/{service}/{user_id}":
    put:
      tags:
        - user
      summary: Update a user
      description: 유저 정보 수정
      parameters:
        - required: true
          schema:
            title: Service from
            type: string
            enum: [PICKME, DIJKSTRA]
          name: service
          in: path
        - required: true
          schema:
            title: User Id
            type: string
          name: user_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserUpdateRequest"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
    delete:
      tags:
        - user
      summary: Remove a user
      description: 유저 정보 삭제
      parameters:
        - required: true
          schema:
            title: Service from
            type: string
            enum: [PICKME, DIJKSTRA]
          name: service
          in: path
        - required: true
          schema:
            title: User Id
            type: string
          name: user_id
          in: path
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object

  "/users/{service}/{user_id}/token/{token_type}":
    post:
      tags:
        - token
      summary: Add a user device token
      description: 유저 디바이스 토큰 추가
      parameters:
        - required: true
          schema:
            title: Service from
            type: string
            enum: [PICKME, DIJKSTRA]
          name: service
          in: path
        - required: true
          schema:
            title: User Id
            type: string
          name: user_id
          in: path
        - required: true
          schema:
            title: Device Token Type
            type: string
            enum: [FCM, APNS]
          name: token_type
          in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserDeviceTokenRequest"
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserDeviceTokenResponse"

  "/users/{service}/{user_id}/token":
    delete:
      tags:
        - token
      summary: Remove all device tokens
      description: 유저 디바이스 토큰 전체 삭제
      parameters:
        - required: true
          schema:
            title: Service from
            type: string
            enum: [PICKME, DIJKSTRA]
          name: service
          in: path
        - required: true
          schema:
            title: User Id
            type: string
          name: user_id
          in: path
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"

  "/users/{service}/{user_id}/token/{token_type}/{token}":
    delete:
      tags:
        - token
      summary: Remove a specific device token
      description: 특정 유저 디바이스 토큰 삭제
      parameters:
        - required: true
          schema:
            title: Service from
            type: string
            enum: [PICKME, DIJKSTRA]
          name: service
          in: path
        - required: true
          schema:
            title: User Id
            type: string
          name: user_id
          in: path
        - required: true
          schema:
            title: Device Token Type
            type: string
            enum: [FCM, APNS]
          name: token_type
          in: path
        - required: true
          schema:
            title: Device Token
            type: string
          name: token
          in: path
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserDeviceTokenResponse"

  "/channels/{service}/{user_id}":
    get:
      tags:
        - channel
      summary: List channels
      description: 채팅방 목록
      parameters:
        - required: true
          schema:
            title: Service from
            type: string
            enum: [PICKME, DIJKSTRA]
          name: service
          in: path
        - required: true
          schema:
            title: User Id
            type: string
          name: user_id
          in: path
      responses:
        '200':
          description: 방목록
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ChannelList"

  "/channels":
    post:
      tags:
        - channel
      summary: Create a channel
      description: 채팅방 생성
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                members:
                  type: array
                  items:
                    type: object
                    properties:
                      service:
                        type: string
                        enum: [PICKME, DIJKSTRA]
                      user_id:
                        type: string
                type:
                  type: string
                  enum: [1_ON_1, GROUP]
      responses:
        '201':
          description: 채팅방 URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  channel:
                    type: string

  "/channels/{channel}/join":
    put:
      tags:
        - channel
      summary: Join a channel
      description: 채팅방 입장
      parameters:
        - required: true
          schema:
            title: channel url
            type: string
          name: channel
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  enum: [PICKME, DIJKSTRA]
                user_id:
                  type: string
      responses:
        '200':
          description: Success

  "/channels/{channel}/leave":
    put:
      tags:
        - channel
      summary: Leave a channel
      description: 채팅방 퇴장
      parameters:
        - required: true
          schema:
            title: channel url
            type: string
          name: channel
          in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  enum: [PICKME, DIJKSTRA]
                user_id:
                  type: string
      responses:
        '200':
          description: Success

  "/channels/{channel}/messages":
    get:
      tags:
        - message
      summary: List channel messages
      description: 채팅 내역 조회
      parameters:
        - required: true
          schema:
            title: channel url
            type: string
          name: channel
          in: path
      responses:
        '200':
          description: 채팅 내역
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Message"

  "/chat/{service}/{user_id}":
    get:
      tags:
        - ws
      summary: ws protocol
      description: 웹소켓 프로토콜을 통해 사용
      parameters:
        - required: true
          schema:
            title: Service from
            type: string
            enum: [PICKME, DIJKSTRA]
          name: service
          in: path
        - required: true
          schema:
            title: User Id
            type: string
          name: user_id
          in: path
      responses:
        '200':
          description: websocket
    post:
      tags:
        - ws
      summary: ws protocol
      description: 웹소켓 메세지
      parameters:
        - required: true
          schema:
            title: Service from
            type: string
            enum: [PICKME, DIJKSTRA]
          name: service
          in: path
        - required: true
          schema:
            title: User Id
            type: string
          name: user_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MessageRequest"
      responses:
        '200':
          description: message
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Message"

components:
  schemas:
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            "$ref": "#/components/schemas/ValidationError"
    HealthCheckResponse:
      title: HealthCheckResponse
      required:
        - message
      type: object
      properties:
        message:
          title: Message
          type: string
    User:
      title: User Data
      type: object
      properties:
        service:
          type: string
          enum: [PICKME, DIJKSTRA]
        user_id:
          type: string
        nickname:
          type: string
        _meta:
          type: object
    UserRequest:
      title: User Register Request
      required:
        - service
        - user_id
        - nickname
      type: object
      properties:
        service:
          type: string
          enum: [PICKME, DIJKSTRA]
        user_id:
          type: string
        nickname:
          type: string
        _meta:
          type: object
    UserUpdateRequest:
      title: User Update Request
      type: object
      properties:
        nickname:
          type: string
        _meta:
          type: object
    UserDeviceTokenRequest:
      title: User Device Token Request
      type: object
      properties:
        fcm_device_token:
          type: string
        apns_device_token:
          type: string
    UserDeviceTokenResponse:
      title: User Device Token Response
      type: object
      properties:
        token_type:
          type: string
          enum: [fcm, apns]
        fcm_device_token:
          type: string
        apns_device_token:
          type: string
        user:
          type: object
          "$ref": "#/components/schemas/User"
    ChannelList:
      title: Channel List
      type: array
      items:
        type: object
        properties:
          channel:
            type: string
          type:
            type: string
            enum: [1_ON_1, GROUP]
          member_count:
            type: integer
          members:
            type: array
            items:
              "$ref": "#/components/schemas/User"
          last_read_at:
            type: array
            items:
              type: object
              properties:
                (service):
                  type: array
                  items:
                    type: object
                    properties:
                      (user_id):
                        type: integer
          unread_message_count:
            type: integer
          last_message:
            "$ref": "#/components/schemas/Message"
          created_at:
            type: integer
          created_by:
            "$ref": "#/components/schemas/User"
          _meta:
            type: object
    Message:
      title: Message
      type: object
      properties:
        message_id:
          type: string
        type:
          type: string
          enum: [PLAINTEXT, PLACE, MEDIA]
        message:
          type: string
        user:
          type: object
          "$ref": "#/components/schemas/User"
        place:
          "$ref": "#/components/schemas/Place"
        created_at:
          type: integer
        created_by:
          "$ref": "#/components/schemas/User"
        _meta:
          type: object
    MessageRequest:
      title: Message Request
      type: object
      properties:
        type:
          type: string
          enum: [PLAINTEXT, PLACE, MEDIA]
        message:
          type: string
        service:
          type: string
          enum: [PICKME, DIJKSTRA]
        user_id:
          type: string
        place:
          "$ref": "#/components/schemas/Place"
        _meta:
          type: object
    Place:
      title: Place Type Message
      type: object
      properties:
        coordinate:
          type: object
          properties:
            latitude:
              type: integer
            longitude:
              type: integer
        place_info:
          type: object
          properties:
            name:
              type: string
            parent_name:
              type: string
            category:
              type: string
            star_point:
              type: integer
              format: float
        timestamp:
          type: integer
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string